import tkinter as tk
from tkinter import ttk
from PIL import Image, ImageTk

class GUI:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Shirmp")

        image_logo_ntu = r"D:\DA_Tot_Nghiep\Pycharm\images\Pic\logo.jpg"
        self.image = Image.open(image_logo_ntu)
        self.logo_ntu = ImageTk.PhotoImage(self.image)

        heightwebcam = 350
        widthwebcam = 350

#---------------------------------------------------- Header -----------------------------------------------------------
    # tạo chều cao chiều dài cho header
        self.header = tk.Frame(self.root, height=50)
        self.header.grid(row=0, column=0, sticky="ew")
        self.header.pack_propagate(0)
    # tạo tiêu đề nội dung
        self.header_title = tk.Label(self.header, text="Header",  bg='red')
        self.header_title.pack(expand=True, fill="both")

#----------------------------------------------------- Body ------------------------------------------------------------
    # tạo vùng body
        self.body = tk.Frame(self.root)
        self.body.grid(row=1, column=0)

    # vùng note
        self.body_note = tk.Frame(self.body, borderwidth=2,
                                       highlightbackground="black", highlightthickness=2)
        self.body_note.grid(row=0, column=0, padx=5, pady=10)

        # vùng information
        self.note_info = tk.Frame(self.body_note, borderwidth=2,
                                       highlightbackground="black", highlightthickness=2)
        self.note_info.grid(row=0, column=0)

        self.info_logo= tk.Label(self.note_info, image=self.logo_ntu)
        self.info_logo.grid(row=0, column=0, columnspan=2, pady=20)
        self.info_title = tk.Label(self.note_info, text="INFORMATION")
        self.info_title.grid(row=1, column=0, columnspan=2, sticky="w")
        self.info_lb_name_nb1 = tk.Label(self.note_info, text="Name:")
        self.info_lb_name_nb1.grid(row=2, column=0, sticky="w")
        self.info_name_nb1 = tk.Label(self.note_info, text="Pham Minh Hoi")
        self.info_name_nb1.grid(row=2, column=1, sticky="w")
        self.info_lb_id_nb1 = tk.Label(self.note_info, text="ID:")
        self.info_lb_id_nb1.grid(row=3, column=0, sticky="w")
        self.info_id_nb1 = tk.Label(self.note_info, text="62133748")
        self.info_id_nb1.grid(row=3, column=1, sticky="w")
        self.info_lb_name_nb1 = tk.Label(self.note_info, text="Name:")
        self.info_lb_name_nb1.grid(row=4, column=0, sticky="w")
        self.info_name_nb1 = tk.Label(self.note_info, text="Le Xuan Tung")
        self.info_name_nb1.grid(row=4, column=1, sticky="w")
        self.info_lb_id_nb1 = tk.Label(self.note_info, text="ID:")
        self.info_lb_id_nb1.grid(row=5, column=0, sticky="w")
        self.info_id_nb1 = tk.Label(self.note_info, text="62133748")
        self.info_id_nb1.grid(row=5, column=1, sticky="w")

        # vùng connect
        self.info_connect = tk.LabelFrame(self.body_note, text="hello", width=200, height=100)
        self.info_connect.grid(row=1, column=0)

    # vùng main
        self.body_main = tk.Frame(self.body,
                                  borderwidth=2, highlightbackground="black", highlightthickness=2)
        self.body_main.grid(row=0, column=1,padx=5, pady=10)
        # tab
        self.main_tab = ttk.Notebook(self.body_main)
        self.main_tab.grid(row=0, column=1)

        # tab webcam
        self.tab_webcam = ttk.Frame(self.main_tab)
        self.main_tab.add(self.tab_webcam, text='Webcam')

        self.tab_webcam_webcamy = tk.LabelFrame(self.tab_webcam, text="Webcam Y",
                                                height=heightwebcam, width=widthwebcam)
        self.tab_webcam_webcamy.grid(row=0, column=0, padx=10)
        self.tab_webcam_result_webcamy =tk.LabelFrame(self.tab_webcam, text="Result Webcam Y",
                                                      height=heightwebcam, width=widthwebcam)
        self.tab_webcam_result_webcamy.grid(row=0, column=1)

        self.tab_webcam_webcamx = tk.LabelFrame(self.tab_webcam, text="Webcam X",
                                                height=heightwebcam, width=widthwebcam)
        self.tab_webcam_webcamx.grid(row=1, column=0)
        self.tab_webcam_result_webcamx = tk.LabelFrame(self.tab_webcam, text="Result Webcam X",
                                                       height=heightwebcam, width=widthwebcam)
        self.tab_webcam_result_webcamx.grid(row=1, column=1)

        self.tab_webcam_parameter = tk.LabelFrame(self.tab_webcam, width=widthwebcam, height=heightwebcam)
        self.tab_webcam_parameter.grid(row=0, column=2)
        self.parameter_title = tk.Label(self.tab_webcam_parameter, text="Parameter")
        self.parameter_title.grid(row=0, column=0)
        self.parameter_lb_hsv = tk.Label(self.tab_webcam_parameter, text="Color HSV")
        self.parameter_lb_hsv.grid(row=1, column=0)
        self.parameter_lb_hue = tk.Label(self.tab_webcam_parameter, text="Hue:")
        self.parameter_lb_hue.grid(row=2, column=0)
        self.parameter_scale_hue = tk.Scale(self.tab_webcam_parameter,from_=0, to=179, orient="horizontal")
        self.parameter_scale_hue.grid(row=2, column=1)
        self.parameter_lb_saturation = tk.Label(self.tab_webcam_parameter, text="Saturation:")
        self.parameter_lb_saturation.grid(row=3, column=0)
        self.parameter_scale_saturation = tk.Scale(self.tab_webcam_parameter, from_=0, to=255, orient="horizontal")
        self.parameter_scale_saturation.grid(row=3, column=1)
        self.parameter_lb_value = tk.Label(self.tab_webcam_parameter, text="Value:")
        self.parameter_lb_value.grid(row=4, column=0)
        self.parameter_scale_value = tk.Scale(self.tab_webcam_parameter, from_=0, to=255, orient="horizontal")
        self.parameter_scale_value.grid(row=4, column=1)
        self.parameter_lb_threshold = tk.Label(self.tab_webcam_parameter, text="threshold")
        self.parameter_lb_threshold.grid(row=5, column=0)
        self.parameter_scale_threshold = tk.Scale(self.tab_webcam_parameter, from_=0, to=255, orient="horizontal")
        self.parameter_scale_threshold.grid(row=5, column=1)
        self.parameter_btn_start = tk.Button(self.tab_webcam_parameter,text="Start")
        self.parameter_btn_start.grid(row=6, column=0)
        self.parameter_btn_stop = tk.Button(self.tab_webcam_parameter, text="Stop")
        self.parameter_btn_stop.grid(row=6, column=1)

        self.tab_webcam_controller = tk.LabelFrame(self.tab_webcam,width=widthwebcam, height=heightwebcam)
        self.tab_webcam_controller.grid(row=1, column=2)


        # tab picture
        self.tab_picture = ttk.Frame(self.main_tab)
        self.main_tab.add(self.tab_picture, text='Picture')

        self.tab_picture_image = tk.LabelFrame(self.tab_picture, text="Image",
                                               height=heightwebcam, width=widthwebcam)
        self.tab_picture_image.grid(row=0, column=0)
        self.tab_picture_result_image = tk.LabelFrame(self.tab_picture, text="Image",
                                                      height=heightwebcam, width=widthwebcam)
        self.tab_picture_result_image.grid(row=0, column=1)

# Chạy giao diện
    def run(self):
        self.root.mainloop()

app = GUI()
app.run()
